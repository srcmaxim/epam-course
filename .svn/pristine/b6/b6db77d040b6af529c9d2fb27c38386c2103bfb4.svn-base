package ua.nure.koval.Practice4;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Iterator;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

class Parser implements Iterable<String> {

	private String encoding = "Cp1251";

	private Matcher matcher;

	private static final String REGEXP = "\\p{javaUpperCase}.*?\\.";

	public final String getEncoding() {
		return encoding;
	}

	public Matcher getMatcher() {
		return matcher;
	}

	public final void setMatcher(Matcher matcher) {
		this.matcher = matcher;
	}

	public Parser(File file) {
		StringBuilder sb = new StringBuilder();
		Scanner s;
		try {
			s = new Scanner(file, getEncoding());
			while (s.hasNextLine()) {
				sb.append(s.nextLine()).append(" ");
				Pattern p = Pattern.compile(REGEXP);
				setMatcher(p.matcher(sb));
			}
		} catch (FileNotFoundException e) {
			System.out.println(file + " not found");
		}
	}

	@Override
	public Iterator<String> iterator() {
		return new ParserIterator(getMatcher());
	}

	private static class ParserIterator implements Iterator<String> {

		private Matcher matcher;

		public Matcher getMatcher() {
			return this.matcher;
		}

		public final void setMatcher(Matcher matcher) {
			this.matcher = matcher;
		}

		public ParserIterator(Matcher matcher) {
			setMatcher(matcher);
		}

		@Override
		public boolean hasNext() {
			return getMatcher().find();
		}

		@Override
		public String next() {
			return getMatcher().group().replace("  ", " ");
		}

		@Override
		public void remove() {
			throw new UnsupportedOperationException();
		}

	}

}